// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "11/15/2022 11:14:14"

// 
// Device: Altera EP3C120F780C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module FULL_ADDER (
	a,
	b,
	cin,
	clk,
	z,
	cout);
input 	a;
input 	b;
input 	cin;
input 	clk;
output 	z;
output 	cout;

// Design Ports Information
// z	=>  Location: PIN_G3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// cout	=>  Location: PIN_H3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_J2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a	=>  Location: PIN_G4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b	=>  Location: PIN_H4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// cin	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("PARTE_B_7_1200mv_0c_v_slow.sdo");
// synopsys translate_on

wire \D3|Q~q ;
wire \cin~input_o ;
wire \D3|Q~feeder_combout ;
wire \z~output_o ;
wire \cout~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \b~input_o ;
wire \D2|Q~feeder_combout ;
wire \D2|Q~q ;
wire \a~input_o ;
wire \D1|Q~feeder_combout ;
wire \D1|Q~q ;
wire \z1~0_combout ;
wire \D5|Q~q ;
wire \cout1~0_combout ;
wire \D4|Q~q ;


// Location: FF_X1_Y62_N13
dffeas \D3|Q (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\D3|Q~feeder_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\D3|Q~q ),
	.prn(vcc));
// synopsys translate_off
defparam \D3|Q .is_wysiwyg = "true";
defparam \D3|Q .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X0_Y61_N22
cycloneiii_io_ibuf \cin~input (
	.i(cin),
	.ibar(gnd),
	.o(\cin~input_o ));
// synopsys translate_off
defparam \cin~input .bus_hold = "false";
defparam \cin~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y62_N12
cycloneiii_lcell_comb \D3|Q~feeder (
// Equation(s):
// \D3|Q~feeder_combout  = \cin~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\cin~input_o ),
	.cin(gnd),
	.combout(\D3|Q~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \D3|Q~feeder .lut_mask = 16'hFF00;
defparam \D3|Q~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOOBUF_X0_Y63_N23
cycloneiii_io_obuf \z~output (
	.i(\D5|Q~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\z~output_o ),
	.obar());
// synopsys translate_off
defparam \z~output .bus_hold = "false";
defparam \z~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y62_N23
cycloneiii_io_obuf \cout~output (
	.i(\D4|Q~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\cout~output_o ),
	.obar());
// synopsys translate_off
defparam \cout~output .bus_hold = "false";
defparam \cout~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y36_N1
cycloneiii_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneiii_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X0_Y62_N15
cycloneiii_io_ibuf \b~input (
	.i(b),
	.ibar(gnd),
	.o(\b~input_o ));
// synopsys translate_off
defparam \b~input .bus_hold = "false";
defparam \b~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y62_N26
cycloneiii_lcell_comb \D2|Q~feeder (
// Equation(s):
// \D2|Q~feeder_combout  = \b~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\b~input_o ),
	.cin(gnd),
	.combout(\D2|Q~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \D2|Q~feeder .lut_mask = 16'hFF00;
defparam \D2|Q~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y62_N27
dffeas \D2|Q (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\D2|Q~feeder_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\D2|Q~q ),
	.prn(vcc));
// synopsys translate_off
defparam \D2|Q .is_wysiwyg = "true";
defparam \D2|Q .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X0_Y63_N15
cycloneiii_io_ibuf \a~input (
	.i(a),
	.ibar(gnd),
	.o(\a~input_o ));
// synopsys translate_off
defparam \a~input .bus_hold = "false";
defparam \a~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y62_N28
cycloneiii_lcell_comb \D1|Q~feeder (
// Equation(s):
// \D1|Q~feeder_combout  = \a~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\a~input_o ),
	.cin(gnd),
	.combout(\D1|Q~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \D1|Q~feeder .lut_mask = 16'hFF00;
defparam \D1|Q~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y62_N29
dffeas \D1|Q (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\D1|Q~feeder_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\D1|Q~q ),
	.prn(vcc));
// synopsys translate_off
defparam \D1|Q .is_wysiwyg = "true";
defparam \D1|Q .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y62_N24
cycloneiii_lcell_comb \z1~0 (
// Equation(s):
// \z1~0_combout  = \D3|Q~q  $ (\D2|Q~q  $ (\D1|Q~q ))

	.dataa(\D3|Q~q ),
	.datab(gnd),
	.datac(\D2|Q~q ),
	.datad(\D1|Q~q ),
	.cin(gnd),
	.combout(\z1~0_combout ),
	.cout());
// synopsys translate_off
defparam \z1~0 .lut_mask = 16'hA55A;
defparam \z1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y62_N25
dffeas \D5|Q (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\z1~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\D5|Q~q ),
	.prn(vcc));
// synopsys translate_off
defparam \D5|Q .is_wysiwyg = "true";
defparam \D5|Q .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y62_N10
cycloneiii_lcell_comb \cout1~0 (
// Equation(s):
// \cout1~0_combout  = (\D3|Q~q  & ((\D1|Q~q ) # (\D2|Q~q ))) # (!\D3|Q~q  & (\D1|Q~q  & \D2|Q~q ))

	.dataa(\D3|Q~q ),
	.datab(\D1|Q~q ),
	.datac(\D2|Q~q ),
	.datad(gnd),
	.cin(gnd),
	.combout(\cout1~0_combout ),
	.cout());
// synopsys translate_off
defparam \cout1~0 .lut_mask = 16'hE8E8;
defparam \cout1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y62_N11
dffeas \D4|Q (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\cout1~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\D4|Q~q ),
	.prn(vcc));
// synopsys translate_off
defparam \D4|Q .is_wysiwyg = "true";
defparam \D4|Q .power_up = "low";
// synopsys translate_on

assign z = \z~output_o ;

assign cout = \cout~output_o ;

endmodule
